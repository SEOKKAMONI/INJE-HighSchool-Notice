{"ast":null,"code":"var _jsxFileName = \"/Users/kimseokjin/sangincheon/src/components/Schedule/Schedule.js\",\n    _s = $RefreshSig$();\n\nimport \"./Schedule.css\";\nimport ScheduleColumn from \"../ScheduleColumn/ScheduleColumn\";\nimport { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Schedule() {\n  _s();\n\n  // 날짜\n  const [today, setToday] = useState(\"\"); // 요일\n\n  const [YMD, setYMD] = useState(null); // YMD 가 null 이면 로딩중\n\n  useEffect(() => {\n    const getTime = () => {\n      let mergeYMD = \"\";\n      const time = new Date();\n      const week = new Array('일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일');\n      let year = time.getFullYear();\n      let month = time.getMonth() + 1;\n      let day = time.getDay();\n      let date = time.getDate();\n      setToday(week[day]); // 0 -> 02 두자리로 만들기\n\n      let dateValue = (\"0\" + date).slice(-2);\n      let monthValue = (\"0\" + month).slice(-2);\n      mergeYMD = (year + monthValue + dateValue) * 1; // string 을 1을 곱해줌으로써 숫자로 변환\n\n      if (week[day] != \"토요일\" && week[day] != \"일요일\") setYMD(mergeYMD - (day - 1));\n      if (week[day] == \"토요일\") setYMD(mergeYMD + 2);\n    };\n\n    setInterval(getTime, 1000);\n  }, []); // API\n\n  const SCHEDULE_URL = `https://open.neis.go.kr/hub/misTimetable?KEY=af1ccdd3826b47f89c4acbfc8b3ed12a&pIndex=1&pSize=6&Type=json&ATPT_OFCDC_SC_CODE=E10&SD_SCHUL_CODE=7341079`;\n\n  if (YMD == null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-container loading\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        color: \"#3A86FF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-container__header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: today == \"월요일\" ? \"header__today\" : \"header__day\",\n        children: \"\\uC6D4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: today == \"화요일\" ? \"header__today\" : \"header__day\",\n        children: \"\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: today == \"수요일\" ? \"header__today\" : \"header__day\",\n        children: \"\\uC218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: today == \"목요일\" ? \"header__today\" : \"header__day\",\n        children: \"\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: today == \"금요일\" ? \"header__today\" : \"header__day\",\n        children: \"\\uAE08\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-container__content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schedule__frame\",\n        children: [0, 1, 2, 3, 4].map(item => {\n          return /*#__PURE__*/_jsxDEV(ScheduleColumn, {\n            URL: SCHEDULE_URL,\n            ALL_TI_YMD_DATA: YMD + item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Schedule, \"t99e3+NgTdtQqNd1tLg4zKXGxos=\");\n\n_c = Schedule;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schedule\");","map":{"version":3,"names":["ScheduleColumn","useState","useEffect","ClipLoader","Schedule","today","setToday","YMD","setYMD","getTime","mergeYMD","time","Date","week","Array","year","getFullYear","month","getMonth","day","getDay","date","getDate","dateValue","slice","monthValue","setInterval","SCHEDULE_URL","map","item"],"sources":["/Users/kimseokjin/sangincheon/src/components/Schedule/Schedule.js"],"sourcesContent":["import \"./Schedule.css\";\nimport ScheduleColumn from \"../ScheduleColumn/ScheduleColumn\";\nimport { useState, useEffect } from \"react\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\n\nexport default function Schedule() {\n    // 날짜\n    const [today, setToday] = useState(\"\"); // 요일\n    const [YMD, setYMD] = useState(null); // YMD 가 null 이면 로딩중\n    \n    useEffect(() => {\n        const getTime = () => {\n            let mergeYMD = \"\"\n\n            const time = new Date();\n            const week = new Array('일요일', '월요일', '화요일', '수요일', '목요일', '금요일', '토요일');\n            let year = time.getFullYear();\n            let month = time.getMonth() + 1;\n            let day = time.getDay();\n            let date = time.getDate();\n            setToday(week[day]);\n            \n            // 0 -> 02 두자리로 만들기\n            let dateValue = (\"0\" + date).slice(-2)\n            let monthValue = (\"0\" + month).slice(-2)\n            mergeYMD = (year+monthValue+dateValue) * 1; // string 을 1을 곱해줌으로써 숫자로 변환\n            if(week[day] != \"토요일\" && week[day] != \"일요일\")\n                setYMD(mergeYMD - (day - 1))\n            if(week[day] == \"토요일\")\n                setYMD(mergeYMD + 2)\n        }\n        setInterval(getTime, 1000);    \n    }, [])\n\n    // API\n    const SCHEDULE_URL = `https://open.neis.go.kr/hub/misTimetable?KEY=af1ccdd3826b47f89c4acbfc8b3ed12a&pIndex=1&pSize=6&Type=json&ATPT_OFCDC_SC_CODE=E10&SD_SCHUL_CODE=7341079`;\n    if(YMD == null) {\n        return (\n            <div className=\"schedule-container loading\">\n                <ClipLoader \n                    color=\"#3A86FF\"\n                />\n            </div>\n        )\n    }  \n    return (\n        <div className=\"schedule-container\">\n            <div className=\"schedule-container__header\">\n                <span className={today == \"월요일\" ? \"header__today\" : \"header__day\"}>월</span>\n                <span className={today == \"화요일\" ? \"header__today\" : \"header__day\"}>화</span>\n                <span className={today == \"수요일\" ? \"header__today\" : \"header__day\"}>수</span>\n                <span className={today == \"목요일\" ? \"header__today\" : \"header__day\"}>목</span>\n                <span className={today == \"금요일\" ? \"header__today\" : \"header__day\"}>금</span>\n            </div>\n            <div className=\"schedule-container__content\">\n                <div className=\"schedule__frame\">\n                    {\n                        [0,1,2,3,4].map(item => {\n                            return <ScheduleColumn URL={SCHEDULE_URL} ALL_TI_YMD_DATA={YMD+item} />\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}